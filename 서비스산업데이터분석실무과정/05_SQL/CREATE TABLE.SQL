
--1.
CREATE TABLE CUSTOMERS (
CNO NUMBER(5) PRIMARY KEY,
CNAME VARCHAR2(10) NOT NULL,
ADDRESS VARCHAR2(50) NOT NULL,
EMAIL VARCHAR2(20) NOT NULL,
PHONE VARCHAR2(20) NOT NULL);


CREATE TABLE ORDERS (
ORDERNO NUMBER(10) PRIMARY KEY,
ORDERDATE DATE DEFAULT SYSDATE NOT NULL,
ADDRESS VARCHAR2(50) NOT NULL,
PHONE VARCHAR2(20) NOT NULL,
STATUS VARCHAR2(20) NOT NULL CHECK(STATUS IN ('결제완료','배송중','배송완료')),
CNO NUMBER(5) NOT NULL REFERENCES CUSTOMERS (CNO));


CREATE TABLE PRODUCTS (
PNO NUMBER(5) PRIMARY KEY,
PNAME VARCHAR2(20) NOT NULL,
COST NUMBER(8) DEFAULT 0 NOT NULL,
STOCK NUMBER(5) DEFAULT 0 NOT NULL );

CREATE TABLE ORDERDETAIL (
ORDERNO NUMBER(10),
PNO NUMBER(5),
QTY NUMBER(5) DEFAULT 0,
COST NUMBER(8) DEFAULT 0,
PRIMARY KEY (ORDERNO, PNO),
FOREIGN KEY (ORDERNO) REFERENCES ORDERS(ORDERNO),
FOREIGN KEY (PNO) REFERENCES PRODUCTS(PNO));

--2.
INSERT INTO PRODUCTS (PNO, PNAME, COST, STOCK)
VALUES (1002, '새우깡', 1500, 500),
(1003, '월드콘', 2000, 350),
(1004, '빼빼로', 2000, 700),
(1005, '코카콜라',1800, 550), 
(1006, '환타', 1600, 300);

INSERT INTO CUSTOMERS (CNO, CNAME, ADDRESS, EMAIL, PHONE)
VALUES (101, '김철수', '서울 강남구', 

---------------------------------------------------------------------
--1.
CREATE TABLE MEMBER (
MEMBER_ID NUMBER(10) PRIMARY KEY,
NAME VARCHAR2(25) NOT NULL,
ADDRESS VARCHAR2(100),
CITY VARCHAR2(30),
PHONE VARCHAR2(15),
JOIN_DATE DATE DEFAULT SYSDATE NOT NULL);

CREATE TABLE TITLE (
TITLE_ID NUMBER(10) PRIMARY KEY,
TITLE VARCHAR2(60) NOT NULL,
DESCRIPTION VARCHAR2(400) NOT NULL,
RATING VARCHAR2(20) CHECK (RATING IN ('18가','15가','12가','전체가')),
CATEGORY VARCHAR2(20) CHECK (CATEGORY IN ('드라마','코미디','액션','아동','SF','다큐멘터리')),
RELEASE_DATE DATE);

CREATE TABLE TITLE_COPY (
COPY_ID NUMBER(10),
TITLE_ID NUMBER(10) REFERENCES TITLE (TITLE_ID),
STATUS VARCHAR2(20) NOT NULL CHECK(STATUS IN ('대여가능','파손','대여중','예약')),
PRIMARY KEY (COPY_ID, TITLE_ID));

CREATE TABLE RENTAL (
BOOK_DATE DATE DEFAULT SYSDATE,
MEMBER_ID NUMBER(10),
COPY_ID NUMBER(10),
TITLE_ID NUMBER(10),
ACT_RET_DATE DATE,
EXP_RET_DATE DATE  DEFAULT SYSDATE+2,
PRIMARY KEY (BOOK_DATE, MEMBER_ID, COPY_ID, TITLE_ID),
FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
FOREIGN KEY (COPY_ID,TITLE_ID) REFERENCES TITLE_COPY (COPY_ID,TITLE_ID));

CREATE TABLE RESERVATION (
RES_DATE DATE,
MEMBER_ID NUMBER(10),
TITLE_ID NUMBER(10),
PRIMARY KEY (RES_DATE, MEMBER_ID, TITLE_ID),
FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID),
FOREIGN KEY (TITLE_ID) REFERENCES TITLE(TITLE_ID));