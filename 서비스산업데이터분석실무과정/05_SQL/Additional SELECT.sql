SELECT *
FROM COLUMN_LENGTH;

SELECT LENGTH(CHARTYPE),LENGTH(VARCHARTYPE)
FROM COLUMN_LENGTH;

SELECT *
FROM EMPLOYEE;

SELECT EMAIL,
       INSTR(EMAIL,'c',-1,2) 위치
FROM EMPLOYEE;

SELECT EMAIL,
       INSTR(EMAIL,'c',INSTR(EMAIL,'.')-1)  위치
FROM EMPLOYEE;    

SELECT EMAIL 원본데이터,
       LENGTH(EMAIL) 원본길이,
       LPAD(EMAIL,20,'.') 적용결과,
       RPAD(EMAIL,20,'*') 적용결과2,
       LENGTH(LPAD(EMAIL,20,'.')) 결과길이
FROM EMPLOYEE;

SELECT RTRIM('  tech  ')
FROM DUAL;

SELECT RTRIM('***tech**','*')
FROM DUAL;

SELECT LTRIM('000123','0')
FROM DUAL;

SELECT LTRIM('123123tech','123')
FROM DUAL;

SELECT RTRIM('123123tech123','123')
FROM DUAL;

SELECT LTRIM('xyxzYyyTech','xyz')
FROM DUAL;

SELECT RTRIM('6374Tech56783','0123456789')
FROM DUAL;

SELECT TRIM(8 FROM '88tech88')
FROM DUAL;

SELECT TRIM('a' FROM 'aatechaaa')
FROM DUAL;

SELECT TRIM(LEADING '0' FROM '001230')
FROM DUAL;

SELECT TRIM(TRAILING '1' FROM '1TECH1')
FROM DUAL;

SELECT TRIM ('1' FROM '123thech111')
FROM DUAL;

SELECT TRIM(TRAILING FROM '  TECH  ')
FROM DUAL;

SELECT SUBSTR('This is a test',6,2)
FROM DUAL;

SELECT SUBSTR('THIS IS A TEST', 6)
FROM DUAL;

SELECT SUBSTR('이것은 연습입니다', 3, 4)
FROM DUAL;

SELECT SUBSTR('TechOnTheNet', 1, 4)
FROM DUAL;

SELECT SUBSTR('TechOnTheNet', -3, 3)
FROM DUAL;

SELECT SUBSTR('TechOnTheNet', -6, 3)
FROM DUAL;

SELECT SUBSTR('TechOnTheNet', -8, 4)
FROM DUAL;

SELECT *
FROM EMPLOYEE;

SELECT EMP_NAME 이름,
       SUBSTR(HIRE_DATE, 1, 2) 입사년도
FROM EMPLOYEE;

SELECT SUBSTR(EMAIL, 1, INSTR(EMAIL, '@')-1) 아이디
FROM EMPLOYEE;

SELECT INSTR(EMAIL, '@')-1
FROM EMPLOYEE;

SELECT EMAIL
FROM EMPLOYEE
WHERE LENGTH(SUBSTR(EMAIL, 1, INSTR(EMAIL, '@')-1))>=6;

SELECT ROUND(125.315)
FROM DUAL;

SELECT ROUND(125.315, 0)
FROM DUAL;

SELECT ROUND(125.315, 1)
FROM DUAL;

SELECT ROUND(125.315,-1)
FROM DUAL;

SELECT ROUND(125.315,3)
FROM DUAL;

SELECT ROUND(-125.315, -1)
FROM DUAL;

SELECT TRUNC(125.315)
FROM DUAL;

SELECT TRUNC(125.315,5)
FROM DUAL;

SELECT SYSDATE
FROM DUAL;

SELECT EMP_NAME 이름,
       HIRE_DATE 입사일,
       TRUNC(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)/12)||'년' 근속년수
FROM EMPLOYEE
WHERE ADD_MONTHS(HIRE_DATE,240) <= SYSDATE;

SELECT ADD_MONTHS(HIRE_DATE,240)
FROM EMPLOYEE;

SELECT *
FROM EMPLOYEE;

SELECT SUBSTR(EMP_NO, 1, 6) 앞자리,
       SUBSTR(EMP_NO, 8) 뒷자리,
       SUBSTR(EMP_NO, 1, 6)+ SUBSTR(EMP_NO, 8) 암시적,
       TO_NUMBER(SUBSTR(EMP_NO, 1, 6))+ TO_NUMBER(SUBSTR(EMP_NO, 8)) 묵시적
FROM EMPLOYEE;

--여자사원의 이름과 주민번호
SELECT EMP_NAME 이름, 
       EMP_NO 주민번호
FROM EMPLOYEE
WHERE SUBSTR(EMP_NO, 8,1)='2';

SELECT TO_CHAR(1234, '999')
FROM DUAL;

SELECT TO_CHAR(1234,'09999')
FROM DUAL;

SELECT TO_CHAR(1234, 'L999999999')
FROM DUAL;

SELECT TO_CHAR(1234,'099,999')
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'PM HH24:MI:SS') FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'AM HH:MI:SS') FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'MON DY, YYYY'),
       TO_CHAR(SYSDATE, 'YYYY-MM-fmDD DAY'),
       TO_CHAR(SYSDATE, 'Year, Q')
FROM DUAL;

SELECT TO_CHAR(SYSDATE+6, 'YYYY-fmMM-DD DAY')
FROM DUAL;

SELECT EMP_NAME 이름,
       TO_CHAR(HIRE_DATE,'YYYY-MM-DD') 입사일
FROM EMPLOYEE
WHERE JOB_ID='J7';

SELECT EMP_NAME 이름,
      TO_CHAR(HIRE_DATE, 'YYYY"년" MM"월 "DD"일"') 입사일
FROM EMPLOYEE
WHERE job_id='J7';

SELECT EMP_NAME,
       SUBSTR(HIRE_DATE,1,2)||'년 '||SUBSTR(HIRE_DATE,4,2)||'월 '||SUBSTR(HIRE_DATE,7,2)||'일'
FROM EMPLOYEE
WHERE JOB_ID='J7';

SELECT EMP_NAME 이름,
       HIRE_DATE 기본입사일,
       TO_CHAR(HIRE_DATE,'YYYY/MM/DD HH24:MI:SS') 상세입사일
FROM EMPLOYEE
WHERE JOB_ID IN ('J1','J2');

SELECT EMP_NAME,
       HIRE_DATE
FROM EMPLOYEE
WHERE HIRE_DATE=TO_DATE('900401 133030','YY/MM/DD HH24MISS');

SELECT EMP_NAME
FROM EMPLOYEE
WHERE TO_CHAR(HIRE_DATE,'YYMMDD')= '900401';

SELECT EMP_NAME
FROM EMPLOYEE
WHERE SUBSTR(HIRE_DATE, 1, 10) = '90/04/01';

SELECT TO_DATE('20100101','YYYYMMDD'),
       TO_CHAR(TO_DATE('20100101','YYYYMMDD'),'YYYY, MON')
FROM DUAL;

SELECT TO_DATE('041030 143000', 'YYMMDD HH24MISS') FROM DUAL;

SELECT TO_CHAR(TO_DATE('041030 143000', 'YYMMDD HH24MISS'),'DD-MON-YY HH:MI:SS PM') FROM DUAL;

SELECT TO_DATE('980630','YYMMDD') FROM DUAL;

SELECT TO_CHAR(TO_DATE('980630','YYMMDD'),'YYYY.MM.DD')
FROM DUAL;

SELECT SYSDATE 현재,
       '95/10/27' 입력,
       TO_CHAR(TO_DATE('95/10/27','YY/MM/DD'),'YYYY/MM/DD') 형식1,
       TO_CHAR(TO_DATE('95/10/27','RR/MM/DD'),'YYYY/MM/DD') 형식2,
       TO_CHAR(TO_DATE('95/10/27','YY/MM/DD'),'RRRR/MM/DD') 형식3,
       TO_CHAR(TO_DATE('95/10/27','RR/MM/DD'),'RRRR/MM/DD') 형식4
FROM DUAL;

SELECT EMP_NAME, SALARY, NVL(BONUS_PCT,0)
FROM EMPLOYEE
WHERE SALARY>3500000;

SELECT EMP_NAME,
       (SALARY*12)+((SALARY*12)*BONUS_PCT) 연봉
FROM EMPLOYEE 
WHERE SALARY>3500000;

SELECT EMP_NAME,
       (SALARY*12)+((SALARY*12)*NVL(BONUS_PCT,0)) 연봉
FROM EMPLOYEE
WHERE SALARY>3500000;

SELECT EMP_NAME,
       EMP_NO,
       SUBSTR(EMP_NO, -7, 1),
       DECODE(SUBSTR(EMP_NO, -7, 1), 1, '남자',2,'여자') GENDER,
       DECODE(SUBSTR(EMP_NO, -7, 1), 3, '남자','여자') GENDER2
FROM EMPLOYEE
WHERE DEPT_ID='50';

SELECT EMP_NAME,
       MGR_ID,
       DECODE(MGR_ID, NULL, '관리자', '직원') 구분
FROM EMPLOYEE
WHERE JOB_ID='J4';

SELECT *
FROM JOB;

SELECT *
FROM EMPLOYEE;

SELECT EMP_NAME,
       JOB_ID,
       MGR_ID,
       DECODE(JOB_ID, 'J7', SALARY+(SALARY*0.1), 'J6', SALARY+(SALARY*0.2),'J5',SALARY+(SALARY*0.3),SALARY) 연봉인상,
       NVL2(MGR_ID, '직원', '관리자') 구분
FROM EMPLOYEE;

--NVL2(MGR_ID, '직원', '관리자')

SELECT EMP_NAME,
       JOB_ID,
       CASE JOB_ID
            WHEN 'J7' THEN SALARY+(SALARY*0.1)
            WHEN 'J6' THEN SALARY+(SALARY*0.2)
            ELSE SALARY
       END 급여인상
FROM EMPLOYEE;

SELECT EMP_NAME,
       JOB_ID,
       CASE
         WHEN JOB_ID='J7'  THEN SALARY+(SALARY*0.1)
         WHEN JOB_ID='J6'  THEN SALARY+(SALARY*0.2)
         ELSE SALARY
       END 급여인상
FROM EMPLOYEE;

SELECT EMP_NAME,
       SALARY,
       CASE
          WHEN SALARY>4000000  THEN '고급개발자'
          WHEN SALARY<=3000000 THEN '초급개발자'
          WHEN SALARY<=4000000 THEN '중급개발자'
       END
FROM EMPLOYEE;

--그룹함수는 NULL를 계산하지 않음

SELECT MAX(PROFESSOR_NAME)
FROM TB_PROFESSOR
GROUP BY PROFESSOR_NAME;

SELECT *
FROM TB_PROFESSOR;
---------------------------질문

SELECT EMP_NAME, SALARY
FROM EMPLOYEE
WHERE DEPT_ID='50'
OR DEPT_ID IS NULL
ORDER BY SALARY DESC;

SELECT EMP_NAME, HIRE_DATE, DEPT_ID
FROM EMPLOYEE
WHERE HIRE_DATE >TO_DATE('20030101', 'RRRRMMDD')
ORDER BY DEPT_ID DESC NULLS LAST, HIRE_DATE, EMP_NAME;

SELECT EMP_NAME, HIRE_DATE, DEPT_ID
FROM EMPLOYEE
WHERE TO_DATE(TO_CHAR(HIRE_DATE,'RRRRMMDD'),'RRRRMMDD') >TO_DATE('20030101', 'RRRRMMDD')
ORDER BY DEPT_ID DESC NULLS LAST, HIRE_DATE, EMP_NAME;

SELECT TO_CHAR(TO_DATE(TO_CHAR(HIRE_DATE,'RRRRMMDD'),'RRRRMMDD'),'RRRRMMDD')
FROM EMPLOYEE;
-------------------------------------------------질문

SELECT DECODE(SUBSTR(EMP_NO, 8,1),1,'남자',2, '여자') 성별,
       ROUND(AVG(SALARY)) 평균_월급
FROM EMPLOYEE
GROUP BY DECODE(SUBSTR(EMP_NO, 8,1),1,'남자',2, '여자');
--그룹함수는 GROUP BY와 그 해당 컬럼


SELECT *
FROM EMPLOYEE;

SELECT DEPT_ID,
       NVL(EMP_NAME,'부서합'),
       COUNT(*)
FROM EMPLOYEE
GROUP BY ROLLUP(DEPT_ID, EMP_NAME);

SELECT DEPT_ID, SUM(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_ID
HAVING SUM(SALARY)>9000000;

SELECT DEPT_ID, SUM(SALARY)
FROM EMPLOYEE
WHERE SUM(SALARY)>9000000 --WHERE절에 집계함수 사용 못함.
GROUP BY DEPT_ID;

SELECT EMP_NAME,
       DEPT_NAME
FROM EMPLOYEE A, DEPARTMENT B
WHERE A.DEPT_ID= B.DEPT_ID;

SELECT EMP_NAME,
       DEPT_NAME
FROM EMPLOYEE A
INNER JOIN DEPARTMENT B USING(DEPT_ID);

SELECT EMP_NAME,
       DEPT_NAME
FROM EMPLOYEE
INNER JOIN DEPARTMENT USING(DEPT_ID);

SELECT EMP_NAME,
       SALARY,
       SLEVEL,
       JOB_TITLE,
       DEPT_NAME
FROM EMPLOYEE A, SAL_GRADE B, JOB C, DEPARTMENT D
WHERE SALARY BETWEEN LOWEST AND HIGHEST
      AND A.JOB_ID=C.JOB_ID
      AND A.DEPT_ID=D.DEPT_ID;

SELECT EMP_NAME,
    DEPT_NAME
FROM EMPLOYEE,DEPARTMENT;

--USING 관계가 있는 조인/ ON 관계가 없는 조인

SELECT *
FROM EMPLOYEE;

SELECT DEPT_NAME,
       LOC_DESCRIBE
FROM LOCATION L
JOIN DEPARTMENT D ON (LOCATION_ID=LOC_ID);

SELECT EMP_NAME,
       SALARY,
       SLEVEL
FROM EMPLOYEE E
JOIN SAL_GRADE S ON (SALARY BETWEEN LOWEST AND HIGHEST);

SELECT *
FROM EMPLOYEE;

SELECT *
FROM DEPARTMENT;

SELECT  EMP_NAME,
        DEPT_NAME,
        D.DEPT_ID
FROM EMPLOYEE E, DEPARTMENT D
WHERE D.DEPT_ID= E.DEPT_ID(+);

SELECT EMP_NAME, DEPT_NAME
FROM EMPLOYEE JOIN DEPARTMENT USING(DEPT_ID);
--WHERE JOB_ID='J6';

SELECT EMP_NAME, LOC_ID
FROM EMPLOYEE2 JOIN DEPARTMENT USING (DEPT_ID, LOC_ID);

SELECT DEPT_NAME, LOC_DESCRIBE
FROM DEPARTMENT INNER JOIN LOCATION ON (LOC_ID=LOCATION_ID);

SELECT EMP_NAME, DEPT_NAME
FROM EMPLOYEE
FULL JOIN DEPARTMENT USING (DEPT_ID);

SELECT EMP_NAME, DEPT_NAME
FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DEPT_ID(+)=D.DEPT_ID;

SELECT E.EMP_NAME 직원,
       M.EMP_NAME 관리자,
       F.EMP_NAME 관리자_사수
FROM EMPLOYEE E 
LEFT JOIN EMPLOYEE M ON (E.MGR_ID=M.EMP_ID)
LEFT JOIN EMPLOYEE F ON (M.MGR_ID=F.EMP_ID)
ORDER BY 1;

SELECT EMP_NAME, JOB_TITLE, DEPT_NAME
FROM EMPLOYEE E
JOIN JOB J USING (JOB_ID) 
JOIN DEPARTMENT D USING (DEPT_ID);

SELECT E.EMP_NAME, D.DEPT_NAME, J.JOB_TITLE, S.SLEVEL, C.COUNTRY_NAME, L.LOC_DESCRIBE
FROM EMPLOYEE E
LEFT JOIN DEPARTMENT D USING (DEPT_ID)
LEFT JOIN LOCATION L ON (LOCATION_ID=LOC_ID)
LEFT JOIN COUNTRY C USING(COUNTRY_ID)
LEFT JOIN JOB J USING (JOB_ID)
LEFT JOIN SAL_GRADE S ON (SALARY BETWEEN LOWEST AND HIGHEST)
ORDER BY 1;

SELECT EMP_NAME, DEPT_NAME
FROM EMPLOYEE
JOIN JOB USING (JOB_ID)
JOIN DEPARTMENT USING (DEPT_ID)
JOIN LOCATION ON (LOC_ID=LOCATION_ID)
WHERE JOB_TITLE='대리'
AND LOC_DESCRIBE LIKE '%아시아%';
